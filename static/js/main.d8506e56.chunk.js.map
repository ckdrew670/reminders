{"version":3,"sources":["components/Reset/Reset.js","components/Reset/index.js","actions/state.js","constants.js","components/Form/Form.js","components/Form/index.js","components/List/List.js","components/List/index.js","components/App.js","reducer.js","store.js","index.js"],"names":["Reset","handleReset","reminders","className","onClick","connect","state","text","dueDate","dispatch","type","Form","props","handleChange","e","setState","target","value","handleDueDate","addReminder","preventDefault","handleSave","console","log","bind","this","onSubmit","placeholder","onChange","Component","action","List","id","handleDelete","map","reminder","key","moment","Date","format","deleteReminder","App","Math","random","removeById","filter","read_cookie","bake_cookie","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8506e56.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Reset = ({\n    handleReset,\n    reminders\n}) => (\n    reminders === [] ? null :\n    <button \n        className=\"reset btn btn-warning\"\n        onClick={ handleReset }\n    >Clear All</button>\n\n);\n\nexport default Reset;","import { connect } from \"react-redux\";\nimport Reset from \"./Reset\";\nimport { clearReminders } from \"../../actions/state\";\n\nconst mapStateToProps = state => {\n    return {\n        text: state.text,\n        dueDate: state.dueDate,\n        \n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      handleReset: () => dispatch(clearReminders()),\n\n    }; \n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset);","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from '../constants';\n\n// add reminder\nexport const addReminder = (text, dueDate) => {\n    const action = {\n        type: ADD_REMINDER,\n        text,\n        dueDate,\n    }\n    console.log('action in addReminder', action);\n    return action;\n}\n\n// delete reminder\n\nexport const deleteReminder = (id) => {\n    const action = {\n        type: DELETE_REMINDER,\n        id,\n    }\n    console.log('deleting in actions', action);\n    return action;\n}\n\n// clear reminders\n\nexport const clearReminders = () => {\n    return {\n        type: CLEAR_REMINDERS,  \n    }\n}","export const ADD_REMINDER = 'ADD_REMINDER';\nexport const DELETE_REMINDER = 'DELETE_REMINDER';\nexport const CLEAR_REMINDERS = 'CLEAR_REMINDERS';","import React, { Component } from 'react';\nimport Reset from '../Reset';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nclass Form extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n            dueDate: \"\",\n        }\n        \n        this.handleChange = this.handleChange.bind(this);\n        this.addReminder = this.addReminder.bind(this);\n       // this.deleteReminder = this.deleteReminder.bind(this);\n    }\n\n    handleChange = (e) => {\n        this.setState({ \n            text: e.target.value,\n            })\n    }\n\n    handleDueDate = (e) => {\n        this.setState({\n            dueDate: e.target.value,\n        })\n    }\n\n    addReminder = (e) => {\n        let { text, dueDate } = this.state;\n\n        e.preventDefault();\n        this.props.handleSave(text, dueDate);\n        \n        this.setState({ \n            text: \"\", \n            dueDate: \"\",\n        });\n\n        console.log('this', this); // <-- outputs the whole object\n        \n    }\n\n    render() {\n        let { text, dueDate } = this.state;\n         \n        return (\n            \n            <form \n                className=\"form\"\n                onSubmit={ this.addReminder }>\n                <label className=\"form-label\">Enter a task:</label>\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    value={ text }\n                    placeholder=\"I have to ...\"\n                    onChange={ this.handleChange }\n                />\n                <label className=\"form-label\">Enter a due date:</label>\n                <input \n                    className=\"form-control\"\n                    type=\"date\"\n                    value={ dueDate }\n                    onChange={ this.handleDueDate }\n                />\n                <div className=\"buttons\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-success form-button \"\n                        value=\"Add Reminder\"\n                    />\n                    <Reset/>\n                </div>\n            </form>\n            \n        )\n    }\n}\n\nexport default Form;","import { connect } from 'react-redux';\nimport Form from './Form';\nimport { addReminder } from '../../actions/state';\n\n\nconst mapStateToProps = state => {\n    return {\n        text: state,\n        dueDate: state,\n        reminders: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSave: (text, dueDate) => dispatch(addReminder(text, dueDate)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React, { Component } from 'react';\nimport moment from 'moment';\n\nclass List extends Component {\n\n    \n    // this delete method has a different syntax from the above so that I can pass in the id with the onClick. It doesn't seem to work the other way?\n    deleteReminder(id) {\n        \n        console.log('deleting in application', id);\n        console.log('this.props', this.props);\n        this.props.handleDelete(id);\n        \n    }\n\n    render() {\n\n        let { reminders } = this.props;\n        \n        return (\n\n            <>\n            <ul className=\"list-group\">\n                {\n                    reminders.map(reminder => {\n                        return (\n\n                            reminder.text === \"\" ? null :\n                            <li \n                                key={ reminder.id }\n                                className=\"list-group-item\"\n                            >\n                                <div className=\"list-item\">{ reminder.text }</div>\n\n                                { reminder.dueDate === \"\" ? null :\n                                <div><em>due { moment(new Date(reminder.dueDate)).format(\"ddd, Do MMM\") }</em></div> }\n\n                                <div \n                                    className=\"btn delete-button\"\n                                    onClick={ () => this.deleteReminder(reminder.id) }\n                                >&#x2715;</div>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n            </>\n        )\n    }\n}\n\nexport default List;","import { connect } from 'react-redux';\nimport List from './List';\nimport { deleteReminder } from '../../actions/state';\n\n\nconst mapStateToProps = state => {\n    return {\n        reminders: state,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleDelete: (id) => dispatch(deleteReminder(id))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React from 'react';\nimport Form from './Form';\nimport List from './List';\n\nconst App = () => (\n\n    <div className=\"App\">\n        <h1 className=\"title\">Reminders</h1>\n        <Form/>\n        <List/>\n    </div>\n       \n);\n\nexport default App;","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from './constants';\nimport { bake_cookie, read_cookie } from 'sfcookies';\n\nconst reminder = (action) => {\n\n    let { text, dueDate } = action;\n\n    return {\n        id: Math.random(),\n        text,\n        dueDate,\n    }\n}\n\nconst removeById = (state = [], id) => {\n    const reminders = state.filter(reminder => reminder.id !== id);\n    console.log('new reduced reminders', reminders);\n    return reminders;\n}\n\nconst reminders = (state = [], action) => {\n    let reminders = null;\n    \n    state = read_cookie('reminders');\n\n    switch(action.type) {\n        case ADD_REMINDER: reminders = [...state, reminder(action)]\n            bake_cookie('reminders', reminders);\n            return reminders;\n        case DELETE_REMINDER: reminders = removeById(state, action.id);\n            bake_cookie('reminders', reminders);\n            return reminders;\n        case CLEAR_REMINDERS: reminders = [];\n            bake_cookie('reminders', reminders);\n            return reminders;\n        default: return state;\n    }\n}\n\nexport default reminders;","import { createStore } from \"redux\";\nimport reducer from './reducer';\n\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__\n    && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\nimport { Provider } from \"react-redux\";\nimport store from './store';\n\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App/>\n    </Provider>, \n    document.getElementById('root')\n)"],"sourceRoot":""}